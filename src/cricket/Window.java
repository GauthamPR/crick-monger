/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cricket;
import java.awt.CardLayout;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.Dictionary;
import java.util.Hashtable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
/**
 *
 * @author GAUTHAM
 */
public class Window extends javax.swing.JFrame {

    private Connection connection;
    private String userName, password;
    private Dictionary teamNames, firstNames, lastNames, playerNames;
    /**
     * Creates new form Window
     */
    public Window() {
        initComponents();
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        loginPanel = new javax.swing.JPanel();
        loginHeading = new javax.swing.JLabel();
        loginUserNameLabel = new javax.swing.JLabel();
        loginUserName = new javax.swing.JTextField();
        loginPasswordLabel = new javax.swing.JLabel();
        loginPassword = new javax.swing.JTextField();
        loginBtn = new javax.swing.JButton();
        resetBtn = new javax.swing.JToggleButton();
        homePanel = new javax.swing.JPanel();
        viewPointsBtn = new javax.swing.JButton();
        welcomeLabel = new javax.swing.JLabel();
        logoutBtn = new javax.swing.JButton();
        viewMatchesBtn = new javax.swing.JButton();
        viewPlayersBtn = new javax.swing.JButton();
        pointsPanel = new javax.swing.JPanel();
        pointsHeadingLabel = new javax.swing.JLabel();
        pointsGoBackBtn = new javax.swing.JButton();
        pointsScrollPane = new javax.swing.JScrollPane();
        pointsTable = new javax.swing.JTable();
        addTeamBtn = new javax.swing.JButton();
        delTeamBtn = new javax.swing.JButton();
        updateTeamBtn = new javax.swing.JButton();
        playersPanel = new javax.swing.JPanel();
        playersHeadingLabel = new javax.swing.JLabel();
        playersGoBackBtn = new javax.swing.JButton();
        playersScrollPane = new javax.swing.JScrollPane();
        playersTable = new javax.swing.JTable();
        addPlayersBtn = new javax.swing.JButton();
        delPlayersBtn = new javax.swing.JButton();
        updatePlayersBtn = new javax.swing.JButton();
        matchesPanel = new javax.swing.JPanel();
        matchesHeadingLabel = new javax.swing.JLabel();
        matchesGoBackBtn = new javax.swing.JButton();
        matchesScrollPane = new javax.swing.JScrollPane();
        matchesTable = new javax.swing.JTable();
        addMatchBtn = new javax.swing.JButton();
        delMatchBtn = new javax.swing.JButton();
        updateMatchBtn = new javax.swing.JButton();
        addMatchPanel = new javax.swing.JPanel();
        addMatchHeadingLabel = new javax.swing.JLabel();
        addMatchGoBackBtn = new javax.swing.JButton();
        addMatchTeam1Label = new javax.swing.JLabel();
        addMatchTeam2Label = new javax.swing.JLabel();
        addMatchVenueLabel = new javax.swing.JLabel();
        addMatchDateLabel = new javax.swing.JLabel();
        addMatchTossWinnerLabel = new javax.swing.JLabel();
        addMatchTossDecisionLabel = new javax.swing.JLabel();
        addMatchInnings1Label = new javax.swing.JLabel();
        addMatchInnings2Label = new javax.swing.JLabel();
        addMatchWinnerLabel = new javax.swing.JLabel();
        addMatchWinMarginLabel = new javax.swing.JLabel();
        addMatchSubmitBtn = new javax.swing.JButton();
        addMatchVenue = new javax.swing.JTextField();
        addMatchInnings1Score = new javax.swing.JTextField();
        addMatchInnings2Score = new javax.swing.JTextField();
        addMatchWinMargin = new javax.swing.JTextField();
        addMatchDay = new javax.swing.JComboBox<>();
        addMatchMonth = new javax.swing.JComboBox<>();
        addMatchYear = new javax.swing.JComboBox<>();
        addMatchTeam1 = new javax.swing.JComboBox<>();
        addMatchTeam2 = new javax.swing.JComboBox<>();
        addMatchTossWinner = new javax.swing.JComboBox<>();
        addMatchWinner = new javax.swing.JComboBox<>();
        addMatchTossDecision = new javax.swing.JComboBox<>();
        delMatchPanel = new javax.swing.JPanel();
        delMatchHeading = new javax.swing.JLabel();
        delMatchGoBackButton = new javax.swing.JButton();
        delMatchTeam1Label = new javax.swing.JLabel();
        delMatchTeam2Label = new javax.swing.JLabel();
        delMatchSubmitBtn = new javax.swing.JButton();
        delMatchDateLabel = new javax.swing.JLabel();
        delMatchDay = new javax.swing.JComboBox<>();
        delMatchMonth = new javax.swing.JComboBox<>();
        delMatchYear = new javax.swing.JComboBox<>();
        delMatchTeam1 = new javax.swing.JComboBox<>();
        delMatchTeam2 = new javax.swing.JComboBox<>();
        updateMatchPanel = new javax.swing.JPanel();
        updateMatchHeadingLabel = new javax.swing.JLabel();
        updateMatchGoBackBtn = new javax.swing.JButton();
        updateMatchTeam1Label = new javax.swing.JLabel();
        updateMatchTeam2Label = new javax.swing.JLabel();
        updateMatchFieldChoiceLabel = new javax.swing.JLabel();
        updateMatchChangeLabel = new javax.swing.JLabel();
        updateMatchSubmitBtn = new javax.swing.JButton();
        updateMatchChange = new javax.swing.JTextField();
        updateMatchFieldChoice = new javax.swing.JComboBox<>();
        updateMatchTeam1 = new javax.swing.JComboBox<>();
        updateMatchTeam2 = new javax.swing.JComboBox<>();
        updateMatcheDateLabel = new javax.swing.JLabel();
        updateMatchMonth = new javax.swing.JComboBox<>();
        updateMatchDay = new javax.swing.JComboBox<>();
        updateMatchYear = new javax.swing.JComboBox<>();
        addPlayerPanel = new javax.swing.JPanel();
        addPlayerHeadingLabel = new javax.swing.JLabel();
        addPlayerGoBackBtn = new javax.swing.JButton();
        addPlayerFirstNameLabel = new javax.swing.JLabel();
        addPlayerLastNameLabel = new javax.swing.JLabel();
        addPlayerTeamLabel = new javax.swing.JLabel();
        addPlayerDOBLabel = new javax.swing.JLabel();
        addPlayerBattingHandLabel = new javax.swing.JLabel();
        addPlayerBowlingSkillLabel = new javax.swing.JLabel();
        addPlayerCountryLabel = new javax.swing.JLabel();
        addPlayerJerseyLabel = new javax.swing.JLabel();
        addPlayerRunsScoredLabel = new javax.swing.JLabel();
        addPlayerWicketsTakenLabel = new javax.swing.JLabel();
        addPlayerSubmitBtn = new javax.swing.JButton();
        addPlayerFirstName = new javax.swing.JTextField();
        addPlayerLastName = new javax.swing.JTextField();
        addPlayerCountry = new javax.swing.JTextField();
        addPlayerJerseyNumber = new javax.swing.JTextField();
        addPlayerRunsScored = new javax.swing.JTextField();
        addPlayerWicketsTaken = new javax.swing.JTextField();
        addPlayerDOBDay = new javax.swing.JComboBox<>();
        addPlayerDOBMonth = new javax.swing.JComboBox<>();
        addPlayerDOBYear = new javax.swing.JComboBox<>();
        addPlayerTeam = new javax.swing.JComboBox<>();
        addPlayerBattingHand = new javax.swing.JComboBox<>();
        addPlayerBowlingSkill = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        delPlayerPanel = new javax.swing.JPanel();
        delPlayerHeadingLabel = new javax.swing.JLabel();
        delPlayerGoBackBtn = new javax.swing.JButton();
        delPlayerNameLabel = new javax.swing.JLabel();
        delPlayerDOBLabel = new javax.swing.JLabel();
        delPlayerSubmitBtn = new javax.swing.JButton();
        delPlayerName = new javax.swing.JComboBox<>();
        delPlayerDOBDay = new javax.swing.JComboBox<>();
        delPlayerDOBMonth = new javax.swing.JComboBox<>();
        delPlayerDOBYear = new javax.swing.JComboBox<>();
        updatePlayerPanel = new javax.swing.JPanel();
        updatePlayerGoBackBtn = new javax.swing.JButton();
        updatePlayerHeadingLabel = new javax.swing.JLabel();
        updatePlayerNameLabel = new javax.swing.JLabel();
        updatePlayerDOBLabel = new javax.swing.JLabel();
        updatePlayerFieldChoiceLabel = new javax.swing.JLabel();
        updatePlayerChangeLabel = new javax.swing.JLabel();
        updatePlayerSubmitBtn = new javax.swing.JButton();
        updatePlayerName = new javax.swing.JComboBox<>();
        updatePlayerDOBDay = new javax.swing.JComboBox<>();
        updatePlayerDOBMonth = new javax.swing.JComboBox<>();
        updatePlayerDOBYear = new javax.swing.JComboBox<>();
        updatePlayerFieldChoice = new javax.swing.JComboBox<>();
        updatePlayerChange = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        addTeamPanel = new javax.swing.JPanel();
        addTeamHeadingLabel = new javax.swing.JLabel();
        addTeamGoBackBtn = new javax.swing.JButton();
        addTeamNameLabel = new javax.swing.JLabel();
        addTeamCoachLabel = new javax.swing.JLabel();
        addTeamPlayedLabel = new javax.swing.JLabel();
        addTeamWinsLabel = new javax.swing.JLabel();
        addTeamLossLabel = new javax.swing.JLabel();
        addTeamTiedLabel = new javax.swing.JLabel();
        addTeamPointsLabel = new javax.swing.JLabel();
        addTeamSubmitBtn = new javax.swing.JButton();
        addTeamName = new javax.swing.JTextField();
        addTeamCoach = new javax.swing.JTextField();
        addTeamWins = new javax.swing.JTextField();
        addTeamLoss = new javax.swing.JTextField();
        addTeamTied = new javax.swing.JTextField();
        addTeamPoints = new javax.swing.JTextField();
        addTeamPlayed = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        delTeamPanel = new javax.swing.JPanel();
        delTeamHeadingLabel = new javax.swing.JLabel();
        delTeamGoBackBtn = new javax.swing.JButton();
        delTeamTeamNameLabel = new javax.swing.JLabel();
        delTeamSubmitBtn = new javax.swing.JButton();
        delTeamName = new javax.swing.JComboBox<>();
        updateTeamPanel = new javax.swing.JPanel();
        updateTeamHeadingLabel = new javax.swing.JLabel();
        updateTeamGoBackBtn = new javax.swing.JButton();
        updateTeamNameLabel = new javax.swing.JLabel();
        updateTeamFieldChoiceLabel = new javax.swing.JLabel();
        updateTeamChangeLabel = new javax.swing.JLabel();
        updateTeamSubmitBtn = new javax.swing.JButton();
        updateTeamChange = new javax.swing.JTextField();
        updateTeamFieldChoice = new javax.swing.JComboBox<>();
        updateTeamName = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Crick Monger");

        mainPanel.setLayout(new java.awt.CardLayout());

        loginHeading.setFont(new java.awt.Font("ROG Fonts", 0, 24)); // NOI18N
        loginHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loginHeading.setText("CRICKET DATABASE LOGIN PAGE");

        loginUserNameLabel.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 18)); // NOI18N
        loginUserNameLabel.setText("Username :");

        loginPasswordLabel.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 18)); // NOI18N
        loginPasswordLabel.setText("Password  :");

        loginBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        loginBtn.setText("LOGIN");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        resetBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        resetBtn.setText("RESET");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(loginPanelLayout.createSequentialGroup()
                                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(loginPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(loginUserNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(loginUserName)
                                    .addComponent(loginPassword)))
                            .addComponent(loginHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(370, 370, 370)
                        .addComponent(loginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(307, Short.MAX_VALUE))
        );

        loginPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {loginBtn, resetBtn});

        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(loginHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginUserName, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(loginUserNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(loginPasswordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loginPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 332, Short.MAX_VALUE)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(237, 237, 237))
        );

        loginPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {loginPassword, loginUserName});

        loginPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {loginBtn, resetBtn});

        mainPanel.add(loginPanel, "loginPanel");

        viewPointsBtn.setBackground(new java.awt.Color(30, 40, 50));
        viewPointsBtn.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 18)); // NOI18N
        viewPointsBtn.setText("View Points Table");
        viewPointsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewPointsBtnActionPerformed(evt);
            }
        });

        welcomeLabel.setFont(new java.awt.Font("ROG Fonts", 1, 24)); // NOI18N
        welcomeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        welcomeLabel.setText("Welcome to Cricket Database!!!");

        logoutBtn.setBackground(new java.awt.Color(30, 40, 50));
        logoutBtn.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 18)); // NOI18N
        logoutBtn.setText("Logout");
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        viewMatchesBtn.setBackground(new java.awt.Color(30, 40, 50));
        viewMatchesBtn.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 18)); // NOI18N
        viewMatchesBtn.setText("View Match Details");
        viewMatchesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewMatchesBtnActionPerformed(evt);
            }
        });

        viewPlayersBtn.setBackground(new java.awt.Color(30, 40, 50));
        viewPlayersBtn.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 18)); // NOI18N
        viewPlayersBtn.setText("View Player Details");
        viewPlayersBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewPlayersBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout homePanelLayout = new javax.swing.GroupLayout(homePanel);
        homePanel.setLayout(homePanelLayout);
        homePanelLayout.setHorizontalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanelLayout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(welcomeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 793, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homePanelLayout.createSequentialGroup()
                .addContainerGap(456, Short.MAX_VALUE)
                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(viewPointsBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(viewPlayersBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                    .addComponent(viewMatchesBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(logoutBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(455, 455, 455))
        );
        homePanelLayout.setVerticalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanelLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(welcomeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewPointsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewPlayersBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewMatchesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(134, 134, 134)
                .addComponent(logoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(325, Short.MAX_VALUE))
        );

        mainPanel.add(homePanel, "homePanel");

        pointsHeadingLabel.setFont(new java.awt.Font("ROG Fonts", 0, 24)); // NOI18N
        pointsHeadingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pointsHeadingLabel.setText("POINTS TABLE");

        pointsGoBackBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        pointsGoBackBtn.setText("Back");
        pointsGoBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pointsGoBackBtnActionPerformed(evt);
            }
        });

        pointsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        pointsScrollPane.setViewportView(pointsTable);

        addTeamBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addTeamBtn.setText("Add Team");
        addTeamBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTeamBtnActionPerformed(evt);
            }
        });

        delTeamBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        delTeamBtn.setText("Delete Team");
        delTeamBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delTeamBtnActionPerformed(evt);
            }
        });

        updateTeamBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updateTeamBtn.setText("Update Team");
        updateTeamBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateTeamBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pointsPanelLayout = new javax.swing.GroupLayout(pointsPanel);
        pointsPanel.setLayout(pointsPanelLayout);
        pointsPanelLayout.setHorizontalGroup(
            pointsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pointsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1145, Short.MAX_VALUE)
            .addGroup(pointsPanelLayout.createSequentialGroup()
                .addGroup(pointsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pointsPanelLayout.createSequentialGroup()
                        .addComponent(pointsGoBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pointsHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 861, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pointsPanelLayout.createSequentialGroup()
                        .addGap(264, 264, 264)
                        .addComponent(addTeamBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(125, 125, 125)
                        .addComponent(updateTeamBtn)
                        .addGap(108, 108, 108)
                        .addComponent(delTeamBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pointsPanelLayout.setVerticalGroup(
            pointsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pointsPanelLayout.createSequentialGroup()
                .addGroup(pointsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pointsHeadingLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(pointsGoBackBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(60, 60, 60)
                .addComponent(pointsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pointsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addTeamBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateTeamBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delTeamBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(430, 430, 430))
        );

        mainPanel.add(pointsPanel, "pointsPanel");

        playersHeadingLabel.setFont(new java.awt.Font("ROG Fonts", 0, 24)); // NOI18N
        playersHeadingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        playersHeadingLabel.setText("PLAYER DETAILS");

        playersGoBackBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        playersGoBackBtn.setText("Back");
        playersGoBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playersGoBackBtnActionPerformed(evt);
            }
        });

        playersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        playersScrollPane.setViewportView(playersTable);

        addPlayersBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addPlayersBtn.setText("Add Player");
        addPlayersBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPlayersBtnActionPerformed(evt);
            }
        });

        delPlayersBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        delPlayersBtn.setText("Delete Player");
        delPlayersBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delPlayersBtnActionPerformed(evt);
            }
        });

        updatePlayersBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updatePlayersBtn.setText("Update Player");
        updatePlayersBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePlayersBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout playersPanelLayout = new javax.swing.GroupLayout(playersPanel);
        playersPanel.setLayout(playersPanelLayout);
        playersPanelLayout.setHorizontalGroup(
            playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(playersScrollPane)
            .addGroup(playersPanelLayout.createSequentialGroup()
                .addGroup(playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(playersPanelLayout.createSequentialGroup()
                        .addComponent(playersGoBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(playersHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 802, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(playersPanelLayout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(addPlayersBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110)
                        .addComponent(delPlayersBtn)
                        .addGap(102, 102, 102)
                        .addComponent(updatePlayersBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(161, Short.MAX_VALUE))
        );
        playersPanelLayout.setVerticalGroup(
            playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playersPanelLayout.createSequentialGroup()
                .addGroup(playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playersHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playersGoBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addComponent(playersScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delPlayersBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updatePlayersBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addPlayersBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(516, Short.MAX_VALUE))
        );

        playersPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addPlayersBtn, delPlayersBtn, updatePlayersBtn});

        mainPanel.add(playersPanel, "playersPanel");

        matchesHeadingLabel.setFont(new java.awt.Font("ROG Fonts", 0, 24)); // NOI18N
        matchesHeadingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        matchesHeadingLabel.setText("MATCH DETAILS");

        matchesGoBackBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        matchesGoBackBtn.setText("Go back");
        matchesGoBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matchesGoBackBtnActionPerformed(evt);
            }
        });

        matchesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        matchesScrollPane.setViewportView(matchesTable);

        addMatchBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addMatchBtn.setText("Add Match");
        addMatchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMatchBtnActionPerformed(evt);
            }
        });

        delMatchBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        delMatchBtn.setText("Delete Match");
        delMatchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delMatchBtnActionPerformed(evt);
            }
        });

        updateMatchBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updateMatchBtn.setText("Update Match");
        updateMatchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateMatchBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout matchesPanelLayout = new javax.swing.GroupLayout(matchesPanel);
        matchesPanel.setLayout(matchesPanelLayout);
        matchesPanelLayout.setHorizontalGroup(
            matchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(matchesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1145, Short.MAX_VALUE)
            .addGroup(matchesPanelLayout.createSequentialGroup()
                .addGroup(matchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(matchesPanelLayout.createSequentialGroup()
                        .addComponent(matchesGoBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(matchesHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 782, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(matchesPanelLayout.createSequentialGroup()
                        .addComponent(addMatchBtn)
                        .addGap(103, 103, 103)
                        .addComponent(delMatchBtn)
                        .addGap(103, 103, 103)
                        .addComponent(updateMatchBtn)
                        .addGap(70, 70, 70)))
                .addContainerGap(223, Short.MAX_VALUE))
        );
        matchesPanelLayout.setVerticalGroup(
            matchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(matchesPanelLayout.createSequentialGroup()
                .addGroup(matchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(matchesHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(matchesGoBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addComponent(matchesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(matchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addMatchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delMatchBtn)
                    .addComponent(updateMatchBtn))
                .addGap(31, 31, 31))
        );

        matchesPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addMatchBtn, delMatchBtn, updateMatchBtn});

        mainPanel.add(matchesPanel, "matchesPanel");

        addMatchHeadingLabel.setFont(new java.awt.Font("ROG Fonts", 0, 24)); // NOI18N
        addMatchHeadingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addMatchHeadingLabel.setText("ADD MATCH");

        addMatchGoBackBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addMatchGoBackBtn.setText("Back");
        addMatchGoBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMatchGoBackBtnActionPerformed(evt);
            }
        });

        addMatchTeam1Label.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addMatchTeam1Label.setText("Team 1");

        addMatchTeam2Label.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addMatchTeam2Label.setText("Team 2");

        addMatchVenueLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addMatchVenueLabel.setText("Venue");

        addMatchDateLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addMatchDateLabel.setText("Date");

        addMatchTossWinnerLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addMatchTossWinnerLabel.setText("Toss Winner");

        addMatchTossDecisionLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addMatchTossDecisionLabel.setText("Toss decision");

        addMatchInnings1Label.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addMatchInnings1Label.setText("Innings 1 score");

        addMatchInnings2Label.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addMatchInnings2Label.setText("Innings 2 score");

        addMatchWinnerLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addMatchWinnerLabel.setText("Winner");

        addMatchWinMarginLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addMatchWinMarginLabel.setText("Win margin");

        addMatchSubmitBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addMatchSubmitBtn.setText("SUBMIT");
        addMatchSubmitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMatchSubmitBtnActionPerformed(evt);
            }
        });

        addMatchDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        addMatchMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        addMatchYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000" }));

        addMatchTeam1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[No Team]" }));
        addMatchTeam1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMatchTeam1ActionPerformed(evt);
            }
        });

        addMatchTeam2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[No Team]" }));
        addMatchTeam2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMatchTeam2ActionPerformed(evt);
            }
        });

        addMatchTossWinner.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[No Team]" }));
        addMatchTossWinner.setSelectedItem(addMatchTeam1);

        addMatchWinner.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[No Team]" }));

        addMatchTossDecision.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bat", "Bowl" }));

        javax.swing.GroupLayout addMatchPanelLayout = new javax.swing.GroupLayout(addMatchPanel);
        addMatchPanel.setLayout(addMatchPanelLayout);
        addMatchPanelLayout.setHorizontalGroup(
            addMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addMatchPanelLayout.createSequentialGroup()
                .addGroup(addMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addMatchPanelLayout.createSequentialGroup()
                        .addComponent(addMatchGoBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addMatchHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 866, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addMatchPanelLayout.createSequentialGroup()
                        .addGap(485, 485, 485)
                        .addComponent(addMatchSubmitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(163, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addMatchPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(addMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addMatchTeam2Label)
                    .addComponent(addMatchTeam1Label)
                    .addComponent(addMatchVenueLabel)
                    .addComponent(addMatchDateLabel)
                    .addComponent(addMatchTossWinnerLabel)
                    .addComponent(addMatchTossDecisionLabel)
                    .addComponent(addMatchInnings1Label)
                    .addComponent(addMatchInnings2Label)
                    .addComponent(addMatchWinnerLabel)
                    .addComponent(addMatchWinMarginLabel))
                .addGap(47, 47, 47)
                .addGroup(addMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(addMatchVenue)
                        .addComponent(addMatchInnings1Score)
                        .addComponent(addMatchInnings2Score)
                        .addComponent(addMatchWinMargin)
                        .addComponent(addMatchTeam1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addMatchTeam2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addMatchTossWinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addMatchWinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addMatchTossDecision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addMatchPanelLayout.createSequentialGroup()
                        .addComponent(addMatchDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addMatchMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(addMatchYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(338, 338, 338))
        );
        addMatchPanelLayout.setVerticalGroup(
            addMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addMatchPanelLayout.createSequentialGroup()
                .addGroup(addMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addMatchGoBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addMatchHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(addMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addMatchTeam1Label)
                    .addComponent(addMatchTeam1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addMatchTeam2Label)
                    .addComponent(addMatchTeam2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addMatchVenueLabel)
                    .addComponent(addMatchVenue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addMatchDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addMatchDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addMatchMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addMatchYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addMatchTossWinnerLabel)
                    .addComponent(addMatchTossWinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addMatchTossDecisionLabel)
                    .addComponent(addMatchTossDecision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addMatchInnings1Label)
                    .addComponent(addMatchInnings1Score, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addMatchInnings2Score, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addMatchInnings2Label, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addMatchWinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addMatchWinnerLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addMatchWinMarginLabel)
                    .addComponent(addMatchWinMargin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(addMatchSubmitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
        );

        mainPanel.add(addMatchPanel, "addMatchPanel");

        delMatchHeading.setFont(new java.awt.Font("ROG Fonts", 0, 24)); // NOI18N
        delMatchHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        delMatchHeading.setText("DELETE MATCH");

        delMatchGoBackButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        delMatchGoBackButton.setText("Go back");
        delMatchGoBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delMatchGoBackButtonActionPerformed(evt);
            }
        });

        delMatchTeam1Label.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        delMatchTeam1Label.setText("Select team 1    :");

        delMatchTeam2Label.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        delMatchTeam2Label.setText("Select team 2    :");

        delMatchSubmitBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        delMatchSubmitBtn.setText("SUBMIT");
        delMatchSubmitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delMatchSubmitBtnActionPerformed(evt);
            }
        });

        delMatchDateLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        delMatchDateLabel.setText("Match date       :");

        delMatchDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        delMatchMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        delMatchYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000" }));

        delMatchTeam1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[No Team]" }));

        delMatchTeam2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[No Team]" }));
        delMatchTeam2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delMatchTeam2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout delMatchPanelLayout = new javax.swing.GroupLayout(delMatchPanel);
        delMatchPanel.setLayout(delMatchPanelLayout);
        delMatchPanelLayout.setHorizontalGroup(
            delMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, delMatchPanelLayout.createSequentialGroup()
                .addComponent(delMatchGoBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84)
                .addComponent(delMatchHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 661, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 186, Short.MAX_VALUE))
            .addGroup(delMatchPanelLayout.createSequentialGroup()
                .addGroup(delMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(delMatchPanelLayout.createSequentialGroup()
                        .addGap(413, 413, 413)
                        .addComponent(delMatchSubmitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(delMatchPanelLayout.createSequentialGroup()
                        .addGap(339, 339, 339)
                        .addGroup(delMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(delMatchDateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(delMatchTeam2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(delMatchTeam1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(delMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(delMatchTeam1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delMatchTeam2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(delMatchPanelLayout.createSequentialGroup()
                                .addComponent(delMatchDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(delMatchMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(delMatchYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        delMatchPanelLayout.setVerticalGroup(
            delMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(delMatchPanelLayout.createSequentialGroup()
                .addGroup(delMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(delMatchHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delMatchGoBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(delMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(delMatchTeam1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(delMatchPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(delMatchTeam1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(9, 9, 9)
                .addGroup(delMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(delMatchTeam2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delMatchTeam2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(delMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delMatchDateLabel)
                    .addComponent(delMatchYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delMatchMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delMatchDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(76, 76, 76)
                .addComponent(delMatchSubmitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(529, Short.MAX_VALUE))
        );

        delMatchPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {delMatchDateLabel, delMatchTeam2Label});

        mainPanel.add(delMatchPanel, "delMatchPanel");

        updateMatchHeadingLabel.setFont(new java.awt.Font("ROG Fonts", 0, 24)); // NOI18N
        updateMatchHeadingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        updateMatchHeadingLabel.setText("UPDATE MATCH DETAILS");

        updateMatchGoBackBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updateMatchGoBackBtn.setText("Back");
        updateMatchGoBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateMatchGoBackBtnActionPerformed(evt);
            }
        });

        updateMatchTeam1Label.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updateMatchTeam1Label.setText("Enter team 1                       :");

        updateMatchTeam2Label.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updateMatchTeam2Label.setText("Enter team 2                       :");

        updateMatchFieldChoiceLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updateMatchFieldChoiceLabel.setText("Choose field to edit              :");

        updateMatchChangeLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updateMatchChangeLabel.setText("Changes                             :");

        updateMatchSubmitBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updateMatchSubmitBtn.setText("Save Changes");
        updateMatchSubmitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateMatchSubmitBtnActionPerformed(evt);
            }
        });

        updateMatchFieldChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Team 1", "Team 2", "Match Date", "Venue", "Toss Winner", "Toss Decision", "Innings 1 Score", "Innings 2 Score", "Winner", "Win Margin" }));

        updateMatchTeam1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[No Team]" }));

        updateMatchTeam2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[No Team]" }));

        updateMatcheDateLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updateMatcheDateLabel.setText("Enter match date                 :");

        updateMatchMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        updateMatchDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        updateMatchYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000" }));

        javax.swing.GroupLayout updateMatchPanelLayout = new javax.swing.GroupLayout(updateMatchPanel);
        updateMatchPanel.setLayout(updateMatchPanelLayout);
        updateMatchPanelLayout.setHorizontalGroup(
            updateMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateMatchPanelLayout.createSequentialGroup()
                .addGroup(updateMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(updateMatchPanelLayout.createSequentialGroup()
                            .addGroup(updateMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(updateMatchTeam1Label)
                                .addComponent(updateMatchTeam2Label)
                                .addComponent(updateMatcheDateLabel)
                                .addComponent(updateMatchFieldChoiceLabel)
                                .addComponent(updateMatchChangeLabel))
                            .addGap(115, 115, 115)
                            .addGroup(updateMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(updateMatchChange, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(updateMatchFieldChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(updateMatchTeam2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(updateMatchTeam1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(updateMatchPanelLayout.createSequentialGroup()
                                    .addComponent(updateMatchDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(updateMatchMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(updateMatchYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(updateMatchPanelLayout.createSequentialGroup()
                            .addComponent(updateMatchGoBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(129, 129, 129)
                            .addComponent(updateMatchHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(updateMatchPanelLayout.createSequentialGroup()
                        .addGap(413, 413, 413)
                        .addComponent(updateMatchSubmitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(174, Short.MAX_VALUE))
        );
        updateMatchPanelLayout.setVerticalGroup(
            updateMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateMatchPanelLayout.createSequentialGroup()
                .addGroup(updateMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateMatchHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateMatchGoBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(updateMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateMatchTeam1Label)
                    .addComponent(updateMatchTeam1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(updateMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateMatchTeam2Label)
                    .addComponent(updateMatchTeam2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(updateMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateMatcheDateLabel)
                    .addComponent(updateMatchMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateMatchDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateMatchYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(updateMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateMatchFieldChoiceLabel)
                    .addComponent(updateMatchFieldChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(updateMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateMatchChangeLabel)
                    .addComponent(updateMatchChange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77)
                .addComponent(updateMatchSubmitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(457, Short.MAX_VALUE))
        );

        mainPanel.add(updateMatchPanel, "updateMatchPanel");

        addPlayerHeadingLabel.setFont(new java.awt.Font("ROG Fonts", 0, 24)); // NOI18N
        addPlayerHeadingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addPlayerHeadingLabel.setText("ADD PLAYER");

        addPlayerGoBackBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addPlayerGoBackBtn.setText("Back");
        addPlayerGoBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPlayerGoBackBtnActionPerformed(evt);
            }
        });

        addPlayerFirstNameLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addPlayerFirstNameLabel.setText("First Name         ");

        addPlayerLastNameLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addPlayerLastNameLabel.setText("Last Name         ");

        addPlayerTeamLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addPlayerTeamLabel.setText("Team");

        addPlayerDOBLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addPlayerDOBLabel.setText("Date of Birth      ");

        addPlayerBattingHandLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addPlayerBattingHandLabel.setText("Batting Hand   ");

        addPlayerBowlingSkillLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addPlayerBowlingSkillLabel.setText("Bowling Skill    ");

        addPlayerCountryLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addPlayerCountryLabel.setText("Country         ");

        addPlayerJerseyLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addPlayerJerseyLabel.setText("Jersey Number   ");

        addPlayerRunsScoredLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addPlayerRunsScoredLabel.setText("Runs Scored    ");

        addPlayerWicketsTakenLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addPlayerWicketsTakenLabel.setText("Wickets Taken   ");

        addPlayerSubmitBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addPlayerSubmitBtn.setText("SUBMIT");
        addPlayerSubmitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPlayerSubmitBtnActionPerformed(evt);
            }
        });

        addPlayerDOBDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        addPlayerDOBMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        addPlayerDOBYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000" }));

        addPlayerTeam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[NO TEAM]" }));

        addPlayerBattingHand.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Right", "Left" }));

        addPlayerBowlingSkill.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "China-Man", "Seam", "Leg Spin" }));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText(":");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText(":");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText(":");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText(":");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText(":");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText(":");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText(":");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText(":");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText(":");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText(":");

        javax.swing.GroupLayout addPlayerPanelLayout = new javax.swing.GroupLayout(addPlayerPanel);
        addPlayerPanel.setLayout(addPlayerPanelLayout);
        addPlayerPanelLayout.setHorizontalGroup(
            addPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPlayerPanelLayout.createSequentialGroup()
                .addGroup(addPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPlayerPanelLayout.createSequentialGroup()
                        .addGap(467, 467, 467)
                        .addComponent(addPlayerSubmitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(addPlayerPanelLayout.createSequentialGroup()
                            .addComponent(addPlayerGoBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(95, 95, 95)
                            .addComponent(addPlayerHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 694, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(addPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addPlayerPanelLayout.createSequentialGroup()
                                .addGroup(addPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addPlayerRunsScoredLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addPlayerWicketsTakenLabel)
                                    .addComponent(addPlayerCountryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addPlayerJerseyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(153, 153, 153)
                                .addGroup(addPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(addPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel6))
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)
                                .addGroup(addPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(addPlayerWicketsTaken, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addPlayerCountry, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addPlayerRunsScored, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addPlayerJerseyNumber, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(addPlayerPanelLayout.createSequentialGroup()
                                .addGroup(addPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addPlayerLastNameLabel)
                                    .addComponent(addPlayerFirstNameLabel)
                                    .addComponent(addPlayerTeamLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addPlayerBattingHandLabel)
                                    .addComponent(addPlayerDOBLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addPlayerBowlingSkillLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(183, 183, 183)
                                .addGroup(addPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(addPlayerPanelLayout.createSequentialGroup()
                                        .addGroup(addPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5)
                                            .addGroup(addPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel2))
                                            .addComponent(jLabel10))
                                        .addGap(35, 35, 35)
                                        .addGroup(addPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(addPlayerBattingHand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(addPlayerTeam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(addPlayerFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(addPlayerLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(addPlayerBowlingSkill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(addPlayerPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(35, 35, 35)
                                        .addComponent(addPlayerDOBDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(addPlayerDOBMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(addPlayerDOBYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(259, Short.MAX_VALUE))
        );
        addPlayerPanelLayout.setVerticalGroup(
            addPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPlayerPanelLayout.createSequentialGroup()
                .addGroup(addPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addPlayerGoBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addPlayerHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(addPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPlayerPanelLayout.createSequentialGroup()
                        .addGroup(addPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addPlayerPanelLayout.createSequentialGroup()
                                .addComponent(addPlayerFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17)
                                .addComponent(addPlayerLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addPlayerTeam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(addPlayerPanelLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addPlayerBattingHand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(addPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addPlayerDOBDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addPlayerDOBMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addPlayerDOBYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(addPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addPlayerBowlingSkill, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(addPlayerPanelLayout.createSequentialGroup()
                        .addComponent(addPlayerFirstNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addPlayerLastNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addPlayerTeamLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addPlayerBattingHandLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addPlayerDOBLabel)
                        .addGap(20, 20, 20)
                        .addComponent(addPlayerBowlingSkillLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPlayerPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addGroup(addPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addPlayerCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addPlayerWicketsTaken, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(addPlayerPanelLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(addPlayerJerseyNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addPlayerRunsScored, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addPlayerPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(addPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addPlayerPanelLayout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(addPlayerRunsScoredLabel))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addPlayerPanelLayout.createSequentialGroup()
                                .addComponent(addPlayerCountryLabel)
                                .addGap(34, 34, 34)
                                .addComponent(addPlayerJerseyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addPlayerWicketsTakenLabel)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addComponent(addPlayerSubmitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(268, 268, 268))
        );

        mainPanel.add(addPlayerPanel, "addPlayerPanel");

        delPlayerHeadingLabel.setFont(new java.awt.Font("ROG Fonts", 0, 24)); // NOI18N
        delPlayerHeadingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        delPlayerHeadingLabel.setText("DELETE PLAYER");

        delPlayerGoBackBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        delPlayerGoBackBtn.setText("Back");
        delPlayerGoBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delPlayerGoBackBtnActionPerformed(evt);
            }
        });

        delPlayerNameLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        delPlayerNameLabel.setText("Enter Player Name         :");

        delPlayerDOBLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        delPlayerDOBLabel.setText("Enter Date of Birth        :");

        delPlayerSubmitBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        delPlayerSubmitBtn.setText("Delete");
        delPlayerSubmitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delPlayerSubmitBtnActionPerformed(evt);
            }
        });

        delPlayerName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[NO PLAYER]" }));

        delPlayerDOBDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        delPlayerDOBMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        delPlayerDOBYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000" }));

        javax.swing.GroupLayout delPlayerPanelLayout = new javax.swing.GroupLayout(delPlayerPanel);
        delPlayerPanel.setLayout(delPlayerPanelLayout);
        delPlayerPanelLayout.setHorizontalGroup(
            delPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(delPlayerPanelLayout.createSequentialGroup()
                .addGroup(delPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(delPlayerPanelLayout.createSequentialGroup()
                        .addComponent(delPlayerGoBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(205, 205, 205)
                        .addGroup(delPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(delPlayerPanelLayout.createSequentialGroup()
                                .addGroup(delPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(delPlayerNameLabel)
                                    .addComponent(delPlayerDOBLabel))
                                .addGap(98, 98, 98)
                                .addGroup(delPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(delPlayerPanelLayout.createSequentialGroup()
                                        .addComponent(delPlayerDOBDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(delPlayerDOBMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(delPlayerDOBYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(delPlayerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(delPlayerHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(delPlayerPanelLayout.createSequentialGroup()
                        .addGap(479, 479, 479)
                        .addComponent(delPlayerSubmitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(289, Short.MAX_VALUE))
        );
        delPlayerPanelLayout.setVerticalGroup(
            delPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(delPlayerPanelLayout.createSequentialGroup()
                .addGroup(delPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(delPlayerGoBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delPlayerHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80)
                .addGroup(delPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delPlayerNameLabel)
                    .addComponent(delPlayerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(delPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delPlayerDOBLabel)
                    .addComponent(delPlayerDOBDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delPlayerDOBMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delPlayerDOBYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(109, 109, 109)
                .addComponent(delPlayerSubmitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(493, Short.MAX_VALUE))
        );

        mainPanel.add(delPlayerPanel, "delPlayerPanel");

        updatePlayerGoBackBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updatePlayerGoBackBtn.setText("Back");
        updatePlayerGoBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePlayerGoBackBtnActionPerformed(evt);
            }
        });

        updatePlayerHeadingLabel.setFont(new java.awt.Font("ROG Fonts", 0, 24)); // NOI18N
        updatePlayerHeadingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        updatePlayerHeadingLabel.setText("UPDATE PLAYER DETAILS");

        updatePlayerNameLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updatePlayerNameLabel.setText(" ");

        updatePlayerDOBLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updatePlayerDOBLabel.setText("Select DOB                    :");

        updatePlayerFieldChoiceLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updatePlayerFieldChoiceLabel.setText("Sellect Field                   :");

        updatePlayerChangeLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updatePlayerChangeLabel.setText("Changes                       :");

        updatePlayerSubmitBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updatePlayerSubmitBtn.setText("SUBMIT");
        updatePlayerSubmitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePlayerSubmitBtnActionPerformed(evt);
            }
        });

        updatePlayerName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[NO PLAYER]" }));

        updatePlayerDOBDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        updatePlayerDOBMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        updatePlayerDOBYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000" }));

        updatePlayerFieldChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "First Name", "Last Name", "Date Of Birth", "Team ID", "Batting Hand", "Bowling Skill", "Country", "Jersey No", "Runs", "Wickets" }));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Player Name                  :");

        javax.swing.GroupLayout updatePlayerPanelLayout = new javax.swing.GroupLayout(updatePlayerPanel);
        updatePlayerPanel.setLayout(updatePlayerPanelLayout);
        updatePlayerPanelLayout.setHorizontalGroup(
            updatePlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatePlayerPanelLayout.createSequentialGroup()
                .addGroup(updatePlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updatePlayerPanelLayout.createSequentialGroup()
                        .addComponent(updatePlayerGoBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(200, 200, 200)
                        .addGroup(updatePlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(updatePlayerPanelLayout.createSequentialGroup()
                                .addGroup(updatePlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(updatePlayerFieldChoiceLabel)
                                    .addComponent(updatePlayerChangeLabel)
                                    .addGroup(updatePlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(updatePlayerDOBLabel)))
                                .addGap(122, 122, 122)
                                .addGroup(updatePlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(updatePlayerChange, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(updatePlayerFieldChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(updatePlayerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(updatePlayerPanelLayout.createSequentialGroup()
                                        .addComponent(updatePlayerDOBDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(updatePlayerDOBMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(updatePlayerDOBYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(updatePlayerNameLabel))
                            .addComponent(updatePlayerHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(updatePlayerPanelLayout.createSequentialGroup()
                        .addGap(493, 493, 493)
                        .addComponent(updatePlayerSubmitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(203, Short.MAX_VALUE))
        );
        updatePlayerPanelLayout.setVerticalGroup(
            updatePlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatePlayerPanelLayout.createSequentialGroup()
                .addGroup(updatePlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updatePlayerHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updatePlayerGoBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(74, 74, 74)
                .addGroup(updatePlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updatePlayerNameLabel)
                    .addComponent(updatePlayerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updatePlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updatePlayerDOBLabel)
                    .addGroup(updatePlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(updatePlayerDOBDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(updatePlayerDOBMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(updatePlayerDOBYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updatePlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updatePlayerFieldChoiceLabel)
                    .addComponent(updatePlayerFieldChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updatePlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updatePlayerChangeLabel)
                    .addComponent(updatePlayerChange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67)
                .addComponent(updatePlayerSubmitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(467, Short.MAX_VALUE))
        );

        mainPanel.add(updatePlayerPanel, "updatePlayerPanel");

        addTeamHeadingLabel.setFont(new java.awt.Font("ROG Fonts", 0, 24)); // NOI18N
        addTeamHeadingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addTeamHeadingLabel.setText("ADD TEAM");

        addTeamGoBackBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addTeamGoBackBtn.setText("Back");
        addTeamGoBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTeamGoBackBtnActionPerformed(evt);
            }
        });

        addTeamNameLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addTeamNameLabel.setText("Name");

        addTeamCoachLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addTeamCoachLabel.setText("Coach");

        addTeamPlayedLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addTeamPlayedLabel.setText("Played");

        addTeamWinsLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addTeamWinsLabel.setText("Wins");

        addTeamLossLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addTeamLossLabel.setText("Loss");

        addTeamTiedLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addTeamTiedLabel.setText("Tied");

        addTeamPointsLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addTeamPointsLabel.setText("Points");

        addTeamSubmitBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addTeamSubmitBtn.setText("SUBMIT");
        addTeamSubmitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTeamSubmitBtnActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setText(":");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setText(":");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setText(":");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setText(":");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setText(":");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel17.setText(":");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel18.setText(":");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel19.setText(":");

        javax.swing.GroupLayout addTeamPanelLayout = new javax.swing.GroupLayout(addTeamPanel);
        addTeamPanel.setLayout(addTeamPanelLayout);
        addTeamPanelLayout.setHorizontalGroup(
            addTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addTeamPanelLayout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106)
                .addGroup(addTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addTeamLossLabel)
                    .addComponent(addTeamWinsLabel)
                    .addComponent(addTeamPlayedLabel)
                    .addComponent(addTeamCoachLabel)
                    .addComponent(addTeamNameLabel)
                    .addComponent(addTeamPointsLabel)
                    .addComponent(addTeamTiedLabel))
                .addGap(37, 37, 37)
                .addGroup(addTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(addTeamPanelLayout.createSequentialGroup()
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addTeamTied, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addTeamPanelLayout.createSequentialGroup()
                        .addGroup(addTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(addTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(addTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(addTeamName)
                                .addComponent(addTeamCoach)
                                .addComponent(addTeamPlayed)
                                .addComponent(addTeamWins, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(addTeamLoss, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addTeamPanelLayout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(addTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addTeamSubmitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addTeamPoints, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(addTeamPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(addTeamGoBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(addTeamHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 765, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(213, Short.MAX_VALUE))
        );
        addTeamPanelLayout.setVerticalGroup(
            addTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addTeamPanelLayout.createSequentialGroup()
                .addGroup(addTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addTeamPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addTeamHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(addTeamGoBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(addTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addTeamPanelLayout.createSequentialGroup()
                        .addGap(235, 235, 235)
                        .addComponent(jLabel14)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(addTeamPanelLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(addTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addTeamPanelLayout.createSequentialGroup()
                                .addComponent(addTeamName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(addTeamCoach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(addTeamPlayed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(addTeamWins, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(addTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(addTeamPanelLayout.createSequentialGroup()
                                        .addComponent(addTeamLoss, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(addTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(addTeamTied, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(addTeamTiedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel19))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(addTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(addTeamPoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel12)
                                            .addComponent(addTeamPointsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(jLabel13)))
                            .addGroup(addTeamPanelLayout.createSequentialGroup()
                                .addGroup(addTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(addTeamNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel18))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(addTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(addTeamCoachLabel)
                                    .addComponent(jLabel16))
                                .addGap(18, 18, 18)
                                .addGroup(addTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(addTeamPlayedLabel)
                                    .addComponent(jLabel15))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(addTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(addTeamWinsLabel)
                                    .addComponent(jLabel17))
                                .addGap(18, 18, 18)
                                .addComponent(addTeamLossLabel)
                                .addGap(71, 71, 71)))
                        .addGap(93, 93, 93)
                        .addComponent(addTeamSubmitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(271, 271, 271))))
        );

        mainPanel.add(addTeamPanel, "addTeamPanel");

        delTeamHeadingLabel.setFont(new java.awt.Font("ROG Fonts", 0, 24)); // NOI18N
        delTeamHeadingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        delTeamHeadingLabel.setText("DELETE TEAM");

        delTeamGoBackBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        delTeamGoBackBtn.setText("Back");
        delTeamGoBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delTeamGoBackBtnActionPerformed(evt);
            }
        });

        delTeamTeamNameLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        delTeamTeamNameLabel.setText("Enter Team                    :");

        delTeamSubmitBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        delTeamSubmitBtn.setText("SUBMIT");
        delTeamSubmitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delTeamSubmitBtnActionPerformed(evt);
            }
        });

        delTeamName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[NO TEAM]" }));

        javax.swing.GroupLayout delTeamPanelLayout = new javax.swing.GroupLayout(delTeamPanel);
        delTeamPanel.setLayout(delTeamPanelLayout);
        delTeamPanelLayout.setHorizontalGroup(
            delTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(delTeamPanelLayout.createSequentialGroup()
                .addGroup(delTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(delTeamPanelLayout.createSequentialGroup()
                        .addComponent(delTeamGoBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(148, 148, 148)
                        .addComponent(delTeamHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(delTeamPanelLayout.createSequentialGroup()
                        .addGap(258, 258, 258)
                        .addComponent(delTeamTeamNameLabel)
                        .addGap(32, 32, 32)
                        .addComponent(delTeamName, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(delTeamPanelLayout.createSequentialGroup()
                        .addGap(375, 375, 375)
                        .addComponent(delTeamSubmitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(325, Short.MAX_VALUE))
        );
        delTeamPanelLayout.setVerticalGroup(
            delTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(delTeamPanelLayout.createSequentialGroup()
                .addGroup(delTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(delTeamHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delTeamGoBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81)
                .addGroup(delTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delTeamTeamNameLabel)
                    .addComponent(delTeamName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(86, 86, 86)
                .addComponent(delTeamSubmitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(560, Short.MAX_VALUE))
        );

        mainPanel.add(delTeamPanel, "delTeamPanel");

        updateTeamHeadingLabel.setFont(new java.awt.Font("ROG Fonts", 0, 24)); // NOI18N
        updateTeamHeadingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        updateTeamHeadingLabel.setText("UPDATE TEAM DETAILS");

        updateTeamGoBackBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updateTeamGoBackBtn.setText("Back");
        updateTeamGoBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateTeamGoBackBtnActionPerformed(evt);
            }
        });

        updateTeamNameLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updateTeamNameLabel.setText("Select Team   :");

        updateTeamFieldChoiceLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updateTeamFieldChoiceLabel.setText("Select Field    :");

        updateTeamChangeLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updateTeamChangeLabel.setText("Changes        :");

        updateTeamSubmitBtn.setText("SUBMIT");
        updateTeamSubmitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateTeamSubmitBtnActionPerformed(evt);
            }
        });

        updateTeamFieldChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Team Name", "Captain", "Coach", "Played", "Wins", "Loss", "Tied", "Points" }));

        updateTeamName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[No Team]" }));

        javax.swing.GroupLayout updateTeamPanelLayout = new javax.swing.GroupLayout(updateTeamPanel);
        updateTeamPanel.setLayout(updateTeamPanelLayout);
        updateTeamPanelLayout.setHorizontalGroup(
            updateTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateTeamPanelLayout.createSequentialGroup()
                .addComponent(updateTeamGoBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(updateTeamHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 165, Short.MAX_VALUE))
            .addGroup(updateTeamPanelLayout.createSequentialGroup()
                .addGroup(updateTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateTeamPanelLayout.createSequentialGroup()
                        .addGap(335, 335, 335)
                        .addGroup(updateTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(updateTeamPanelLayout.createSequentialGroup()
                                .addComponent(updateTeamNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                                .addComponent(updateTeamName, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(updateTeamPanelLayout.createSequentialGroup()
                                .addGroup(updateTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(updateTeamFieldChoiceLabel)
                                    .addComponent(updateTeamChangeLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(updateTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(updateTeamFieldChoice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(updateTeamChange, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(updateTeamPanelLayout.createSequentialGroup()
                        .addGap(406, 406, 406)
                        .addComponent(updateTeamSubmitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        updateTeamPanelLayout.setVerticalGroup(
            updateTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateTeamPanelLayout.createSequentialGroup()
                .addGroup(updateTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateTeamHeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateTeamGoBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addGroup(updateTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateTeamNameLabel)
                    .addComponent(updateTeamName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(updateTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateTeamFieldChoiceLabel)
                    .addComponent(updateTeamFieldChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(updateTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateTeamChangeLabel)
                    .addComponent(updateTeamChange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(93, 93, 93)
                .addComponent(updateTeamSubmitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(482, Short.MAX_VALUE))
        );

        mainPanel.add(updateTeamPanel, "updateTeamPanel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1145, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 872, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void viewPointsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewPointsBtnActionPerformed
        
        DefaultTableModel defaultTableModel = new DefaultTableModel();
        pointsTable.setModel(defaultTableModel);
        defaultTableModel.addColumn("Name");
        defaultTableModel.addColumn("Captain");
        defaultTableModel.addColumn("Coach");
        defaultTableModel.addColumn("Played");
        defaultTableModel.addColumn("Won");
        defaultTableModel.addColumn("Lost");
        defaultTableModel.addColumn("Tied");
        defaultTableModel.addColumn("Points");
        
        try {
            Statement statement = connection.createStatement();//crating statement object
            String query = "SELECT A.NAME,B.FNAME,B.LNAME,A.COACH,A.PLAYED,A.WINS,A.LOSS,A.TIED,A.POINTS " +
                    "FROM TEAM A " +
                    "LEFT OUTER JOIN PLAYER B " +
                    "ON A.CAPTAIN = B.PLAYER_ID "+
                    "ORDER BY A.POINTS DESC";
            ResultSet resultSet = statement.executeQuery(query);//executing query and storing result in ResultSet

            while (resultSet.next()) {
                //Retrieving details from the database and storing it in the String variables
                String name = resultSet.getString(1);
                String captain = resultSet.getString(2) + " " + resultSet.getString(3);
                String coach = resultSet.getString(4);
                int played = resultSet.getInt(5);
                int wins = resultSet.getInt(6);
                int loss = resultSet.getInt(7);
                int tied = resultSet.getInt(8);
                int points = resultSet.getInt(9);

                if("null null".equals(captain)){
                    captain = "[NONE]";
                }
                defaultTableModel.addRow(new Object[]{name, captain, coach, played, wins, loss, tied, points});
            }
        } catch (SQLException throwables) {
            throwables.printStackTrace();
        }
        
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "pointsPanel");
    }//GEN-LAST:event_viewPointsBtnActionPerformed

    private void pointsGoBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pointsGoBackBtnActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "homePanel");
    }//GEN-LAST:event_pointsGoBackBtnActionPerformed

    private void addTeamBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTeamBtnActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "addTeamPanel");
    }//GEN-LAST:event_addTeamBtnActionPerformed

    private void addTeamGoBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTeamGoBackBtnActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "pointsPanel");
    }//GEN-LAST:event_addTeamGoBackBtnActionPerformed

    private void addTeamSubmitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTeamSubmitBtnActionPerformed
        String teamName = addTeamName.getText().toUpperCase();
        String coachName = addTeamCoach.getText().toUpperCase();
        String played = addTeamPlayed.getText().toUpperCase();
        String wins = addTeamWins.getText().toUpperCase();
        String loss = addTeamLoss.getText().toUpperCase();
        String tied = addTeamTied.getText().toUpperCase();
        String points = addTeamPoints.getText().toUpperCase();
        String nullString = "''";

        String query = "INSERT INTO team (NAME,COACH,CAPTAIN,PLAYED,WINS,LOSS,TIED,POINTS)"+
                "VALUES('" + String.join("','", teamName, coachName) + "'," + String.join(",", nullString, played, wins, loss, tied, points) + ")";
        Statement stmt;
        System.out.println(query);
        try {
            stmt = connection.createStatement();
            stmt.execute(query);
            viewPointsBtnActionPerformed(evt);
        } catch (SQLException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addTeamSubmitBtnActionPerformed

    private void delTeamGoBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delTeamGoBackBtnActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "pointsPanel");
    }//GEN-LAST:event_delTeamGoBackBtnActionPerformed

    private void delTeamSubmitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delTeamSubmitBtnActionPerformed
        String teamName = delTeamName.getSelectedItem().toString().toUpperCase();
        String teamID = (String)teamNames.get(teamName);

        String delTeamSql = "DELETE FROM TEAM WHERE team_id=" + teamID;
        String delMatchesSql = "DELETE FROM MATCH WHERE team_1=" + teamID + " OR team_2=" + teamID;
        String removeCaptainSql = "UPDATE TEAM SET CAPTAIN ='' WHERE team_id=" + teamID;
        String removePlayersSql = "DELETE FROM PLAYER WHERE team_id=" + teamID;
        Statement stmt;
        System.out.println(delTeamSql + " " + delMatchesSql);
        try {

            //deleting matches of team
            stmt = connection.createStatement();
            stmt.execute(delMatchesSql);

            //removing captain
            stmt = connection.createStatement();
            stmt.execute(removeCaptainSql);

            //removing players
            stmt = connection.createStatement();
            stmt.execute(removePlayersSql);

            //deleting team
            stmt = connection.createStatement();
            stmt.execute(delTeamSql);

            viewPointsBtnActionPerformed(evt);
        } catch (SQLException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_delTeamSubmitBtnActionPerformed

    private void updateTeamGoBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateTeamGoBackBtnActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "pointsPanel");
    }//GEN-LAST:event_updateTeamGoBackBtnActionPerformed

    private void updateTeamSubmitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateTeamSubmitBtnActionPerformed
        String teamName = updateTeamName.getSelectedItem().toString().toUpperCase();
        String teamID = (String)teamNames.get(teamName);

        String field = updateTeamFieldChoice.getSelectedItem().toString().toUpperCase();
        String newValue = updateTeamChange.getText();

        if(null != field)switch (field) {
            case "TEAM NAME":
                field = "name";
                newValue = "'"+ newValue.toUpperCase() + "'";
                break;
            case "CAPTAIN":
                field = "captain";
                newValue = (String)playerNames.get(newValue.toUpperCase());
                break;
            case "COACH":
                field = "coach";
                newValue = "'"+ newValue.toUpperCase() + "'";
                break;
            default:
                break;
        }
        String query = "UPDATE team SET " + field + "="+ newValue +" WHERE team_id=" + teamID;
        Statement stmt;
        System.out.println(query);
        try {
            stmt = connection.createStatement();
            stmt.execute(query);
            viewPointsBtnActionPerformed(evt);
        } catch (SQLException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateTeamSubmitBtnActionPerformed

    private void playersGoBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playersGoBackBtnActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "homePanel");

    }//GEN-LAST:event_playersGoBackBtnActionPerformed

    private void addPlayersBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPlayersBtnActionPerformed
        String query = "SELECT team_id, name FROM team";
        Statement stmt;
        System.out.println(query);

        teamNames = new Hashtable();
        addPlayerTeam.setModel(new DefaultComboBoxModel());
        try {
            stmt = connection.createStatement();
            ResultSet resultSet = stmt.executeQuery(query);//executing query and storing result in ResultSet

            while (resultSet.next()) {
                //Retrieving details from the database and storing it in the String variables
                String teamName = resultSet.getString(2);
                String teamID = resultSet.getString(1);
                teamNames.put(teamName, teamID);
                addPlayerTeam.addItem(teamName);
            }
        } catch (SQLException throwables) {
            throwables.printStackTrace();
        }
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "addPlayerPanel");
    }//GEN-LAST:event_addPlayersBtnActionPerformed

    private void addPlayerGoBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPlayerGoBackBtnActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "playersPanel");
    }//GEN-LAST:event_addPlayerGoBackBtnActionPerformed

    private void addPlayerSubmitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPlayerSubmitBtnActionPerformed
        String fName = addPlayerFirstName.getText().toUpperCase();
        String lName = addPlayerLastName.getText().toUpperCase();
        String teamName = addPlayerTeam.getSelectedItem().toString().toUpperCase();
        String day = addPlayerDOBDay.getSelectedItem().toString().toUpperCase();
        String month = addPlayerDOBMonth.getSelectedItem().toString().toUpperCase();
        String year = addPlayerDOBYear.getSelectedItem().toString().toUpperCase();
        String battingHand = addPlayerBattingHand.getSelectedItem().toString().toUpperCase();
        String bowlingSkill = addPlayerBowlingSkill.getSelectedItem().toString().toUpperCase();
        String country = addPlayerCountry.getText().toUpperCase();
        String jerseyNo = addPlayerJerseyNumber.getText().toUpperCase();
        String runs = addPlayerRunsScored.getText().toUpperCase();
        String wickets = addPlayerWicketsTaken.getText().toUpperCase();

        String teamID = (String)teamNames.get(teamName);

        String date = String.join("-", day, month, year);
        String query = "INSERT INTO player (FNAME,LNAME,DOB,BATTING_HAND,BOWLING_SKILL,COUNTRY,JERSEY_NO,RUNS,WICKETS,TEAM_ID)"+
                "VALUES('" + String.join("','", fName, lName, date, battingHand, bowlingSkill, country) + "'," + String.join(",", jerseyNo, runs, wickets, teamID) + ")";
        Statement stmt;
        System.out.println(query);
        try {
            stmt = connection.createStatement();
            stmt.execute(query);
            viewPlayersBtnActionPerformed(evt);
        } catch (SQLException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addPlayerSubmitBtnActionPerformed

    private void delPlayersBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delPlayersBtnActionPerformed
        String query = "SELECT fname, lname FROM player";
        Statement stmt;
        System.out.println(query);
        delPlayerName.setModel(new DefaultComboBoxModel());
        firstNames = new Hashtable();
        lastNames = new Hashtable();

        try {
            stmt = connection.createStatement();
            ResultSet resultSet = stmt.executeQuery(query);//executing query and storing result in ResultSet

            while (resultSet.next()) {
                String fName = resultSet.getString(1);
                String lName = resultSet.getString(2);
                String playerName = String.join(" ", fName, lName);
                System.out.println(playerName);
                firstNames.put(playerName, fName);
                lastNames.put(playerName, lName);
                delPlayerName.addItem(playerName);
            }
        } catch (SQLException throwables) {
            throwables.printStackTrace();
        }
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "delPlayerPanel");
    }//GEN-LAST:event_delPlayersBtnActionPerformed

    private void delPlayerGoBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delPlayerGoBackBtnActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "playersPanel");
    }//GEN-LAST:event_delPlayerGoBackBtnActionPerformed

    private void delPlayerSubmitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delPlayerSubmitBtnActionPerformed
        String playerName = delPlayerName.getSelectedItem().toString().toUpperCase();
        String fName = (String)firstNames.get(playerName);
        String lName = (String)lastNames.get(playerName);

        String day = delPlayerDOBDay.getSelectedItem().toString().toUpperCase();
        String month = delPlayerDOBMonth.getSelectedItem().toString().toUpperCase();
        String year = delPlayerDOBYear.getSelectedItem().toString().toUpperCase();


        String date = String.join("-", day, month, year);

        String delQuery = "DELETE FROM PLAYER WHERE fname='" + fName + "' AND lname='" + lName + "' AND dob='" + date + "'";
        String queryForID = "SELECT PLAYER_ID FROM PLAYER WHERE FNAME || ' ' || LNAME = '"+ playerName + "' AND DOB = '" + date +"'";
        Statement stmt;
        ResultSet resultSet;
        System.out.println(delQuery);
        String playerID;
        String exists;
        try {
            //querying for playerID
            stmt = connection.createStatement();
            resultSet = stmt.executeQuery(queryForID);
            resultSet.next();
            playerID = resultSet.getString(1);

            //checking if player is captain
            stmt = connection.createStatement();
            resultSet = stmt.executeQuery("SELECT CASE WHEN COUNT(1) > 0 THEN 1 ELSE 0 END " +
                    "FROM TEAM " +
                    "WHERE CAPTAIN = " + playerID);
            resultSet.next();
            exists = resultSet.getString(1);

            if("1".equals(exists)){//if player is captain
                stmt = connection.createStatement();
                stmt.execute("UPDATE TEAM " +
                        "SET CAPTAIN = '' " +
                        "WHERE CAPTAIN = " + playerID);
            }

            //deleting Player
            stmt = connection.createStatement();
            stmt.execute(delQuery);

            viewPlayersBtnActionPerformed(evt);
        } catch (SQLException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_delPlayerSubmitBtnActionPerformed

    private void updatePlayersBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePlayersBtnActionPerformed
        String query = "SELECT fname, lname FROM player";
        Statement stmt;
        System.out.println(query);
        updatePlayerName.setModel(new DefaultComboBoxModel());
        firstNames = new Hashtable();
        lastNames = new Hashtable();

        try {
            stmt = connection.createStatement();
            ResultSet resultSet = stmt.executeQuery(query);//executing query and storing result in ResultSet

            while (resultSet.next()) {
                String fName = resultSet.getString(1);
                String lName = resultSet.getString(2);
                String playerName = String.join(" ", fName, lName);
                System.out.println(playerName);
                firstNames.put(playerName, fName);
                lastNames.put(playerName, lName);
                updatePlayerName.addItem(playerName);
            }
        } catch (SQLException throwables) {
            throwables.printStackTrace();
        }
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "updatePlayerPanel");
    }//GEN-LAST:event_updatePlayersBtnActionPerformed

    private void updatePlayerGoBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePlayerGoBackBtnActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "playersPanel");
    }//GEN-LAST:event_updatePlayerGoBackBtnActionPerformed

    private void updatePlayerSubmitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePlayerSubmitBtnActionPerformed
        String playerName = updatePlayerName.getSelectedItem().toString().toUpperCase();
        String fName = (String)firstNames.get(playerName);
        String lName = (String)lastNames.get(playerName);

        String day = updatePlayerDOBDay.getSelectedItem().toString().toUpperCase();
        String month = updatePlayerDOBMonth.getSelectedItem().toString().toUpperCase();
        String year = updatePlayerDOBYear.getSelectedItem().toString().toUpperCase();

        String field = updatePlayerFieldChoice.getSelectedItem().toString().toUpperCase();
        String newValue = updatePlayerChange.getText();

        String date = String.join("-", day, month, year);
        if(null != field)switch (field) {
            case "FIRST NAME":
                field = "fname";
                newValue = "'"+ newValue.toUpperCase() + "'";
                break;
            case "LAST NAME":
                field = "lname";
                newValue = "'"+ newValue.toUpperCase() + "'";
                break;
            case "DATE OF BIRTH":
                field = "dob";
                newValue = "'"+ newValue + "'";
                break;
            case "TEAM ID":
                field="team_id";
                break;
            case "BATTING HAND":
                field="batting_hand";
                newValue = "'"+ newValue.toUpperCase() + "'";
                break;
            case "BOWLING SKILL":
                field="bowling_skill";
                newValue = "'"+ newValue.toUpperCase() + "'";
                break;
            case "COUNTRY":
                field="country";
                newValue = "'"+ newValue.toUpperCase() + "'";
                break;
            case "JERSEY NO":
                field="jersey_no";
                break;
            default:
                break;
        }
        String query = "UPDATE PLAYER SET " + field + "="+ newValue +" WHERE fname='" + fName + "' AND lname='" + lName + "' AND dob='" + date + "'";
        Statement stmt;
        System.out.println(query);
        try {
            stmt = connection.createStatement();
            stmt.execute(query);
            viewPlayersBtnActionPerformed(evt);
        } catch (SQLException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updatePlayerSubmitBtnActionPerformed


    private void matchesGoBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matchesGoBackBtnActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "homePanel");
    }//GEN-LAST:event_matchesGoBackBtnActionPerformed

    private void addMatchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMatchBtnActionPerformed
        String query = "SELECT team_id, name FROM team";
        Statement stmt;
        System.out.println(query);

        teamNames = new Hashtable();
        addMatchTeam1.setModel(new DefaultComboBoxModel());
        addMatchTeam2.setModel(new DefaultComboBoxModel());
        addMatchTossWinner.setModel(new DefaultComboBoxModel());
        try {
            stmt = connection.createStatement();
            ResultSet resultSet = stmt.executeQuery(query);//executing query and storing result in ResultSet
            String teamName="", teamID;
            while (resultSet.next()) {
                //Retrieving details from the database and storing it in the String variables
                teamName = resultSet.getString(2);
                teamID = resultSet.getString(1);
                teamNames.put(teamName, teamID);
                addMatchTeam1.addItem(teamName);
                addMatchTeam2.addItem(teamName);
                addMatchTossWinner.addItem(teamName);
            }
            addMatchTeam2.setSelectedItem(teamName);
        } catch (SQLException throwables) {
            throwables.printStackTrace();
        }
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "addMatchPanel");
    }//GEN-LAST:event_addMatchBtnActionPerformed

    private void addMatchGoBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMatchGoBackBtnActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "matchesPanel");
    }//GEN-LAST:event_addMatchGoBackBtnActionPerformed

    private void addMatchSubmitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMatchSubmitBtnActionPerformed
        String team1Name = addMatchTeam1.getSelectedItem().toString().toUpperCase();
        String team2Name = addMatchTeam2.getSelectedItem().toString().toUpperCase();
        String venue = addMatchVenue.getText().toUpperCase();
        String day = addMatchDay.getSelectedItem().toString().toUpperCase();
        String month = addMatchMonth.getSelectedItem().toString().toUpperCase();
        String year = addMatchYear.getSelectedItem().toString().toUpperCase();
        String tossWinner = addMatchTossWinner.getSelectedItem().toString().toUpperCase();
        String tossDecision = addMatchTossDecision.getSelectedItem().toString().toUpperCase();
        String innings1Score = addMatchInnings1Score.getText().toUpperCase();
        String innings2Score = addMatchInnings2Score.getText().toUpperCase();
        String winner = addMatchWinner.getSelectedItem().toString().toUpperCase();
        String winMargin = addMatchWinMargin.getText().toUpperCase();
        
        
        String team1ID = (String)teamNames.get(team1Name);
        String team2ID = (String)teamNames.get(team2Name);
        
        tossWinner = (String)teamNames.get(tossWinner);
        winner = (String)teamNames.get(winner);
        
        String date = String.join("-", day, month, year);
        String query = "INSERT INTO match (match_date,venue,toss_decision,innings_1_score,innings_2_score,win_margin,team_1,team_2,toss_winner,winner)"+
                "VALUES('" + String.join("','", date, venue, tossDecision, innings1Score, innings2Score, winMargin) + "'," + String.join(",", team1ID, team2ID, tossWinner, winner) + ")";
        Statement stmt;
        System.out.println(query);
        try {
            stmt = connection.createStatement();
            stmt.execute(query);
            viewMatchesBtnActionPerformed(evt);
        } catch (SQLException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addMatchSubmitBtnActionPerformed

    private void delMatchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delMatchBtnActionPerformed
        String query = "SELECT team_id, name FROM team";
        Statement stmt;
        System.out.println(query);

        teamNames = new Hashtable();
        delMatchTeam1.setModel(new DefaultComboBoxModel());
        delMatchTeam2.setModel(new DefaultComboBoxModel());
        try {
            stmt = connection.createStatement();
            ResultSet resultSet = stmt.executeQuery(query);//executing query and storing result in ResultSet

            while (resultSet.next()) {
                //Retrieving details from the database and storing it in the String variables
                String teamName = resultSet.getString(2);
                String teamID = resultSet.getString(1);
                teamNames.put(teamName, teamID);
                delMatchTeam1.addItem(teamName);
                delMatchTeam2.addItem(teamName);
                delMatchTeam2.setSelectedItem(teamName);
            }
        } catch (SQLException throwables) {
            throwables.printStackTrace();
        }
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "delMatchPanel");
    }//GEN-LAST:event_delMatchBtnActionPerformed

    private void delMatchGoBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delMatchGoBackButtonActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "matchesPanel");
    }//GEN-LAST:event_delMatchGoBackButtonActionPerformed

    private void delMatchSubmitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delMatchSubmitBtnActionPerformed
        String team1Name = delMatchTeam1.getSelectedItem().toString().toUpperCase();
        String team2Name = delMatchTeam2.getSelectedItem().toString().toUpperCase();

        String day = delMatchDay.getSelectedItem().toString().toUpperCase();
        String month = delMatchMonth.getSelectedItem().toString().toUpperCase();
        String year = delMatchYear.getSelectedItem().toString().toUpperCase();

        String team1ID = (String)teamNames.get(team1Name);
        String team2ID = (String)teamNames.get(team2Name);

        String date = String.join("-", day, month, year);

        String query = "DELETE FROM match WHERE team_1=" + team1ID + " AND team_2=" + team2ID + " AND match_date='" + date + "'";
        Statement stmt;
        System.out.println(query);
        try {
            stmt = connection.createStatement();
            stmt.execute(query);
            viewMatchesBtnActionPerformed(evt);
        } catch (SQLException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_delMatchSubmitBtnActionPerformed

    private void updateMatchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateMatchBtnActionPerformed
        String query = "SELECT team_id, name FROM team";
        Statement stmt;
        System.out.println(query);

        teamNames = new Hashtable();
        updateMatchTeam1.setModel(new DefaultComboBoxModel());
        updateMatchTeam2.setModel(new DefaultComboBoxModel());
        try {
            stmt = connection.createStatement();
            ResultSet resultSet = stmt.executeQuery(query);//executing query and storing result in ResultSet

            while (resultSet.next()) {
                //Retrieving details from the database and storing it in the String variables
                String teamName = resultSet.getString(2);
                String teamID = resultSet.getString(1);
                teamNames.put(teamName, teamID);
                updateMatchTeam1.addItem(teamName);
                updateMatchTeam2.addItem(teamName);
                updateMatchTeam2.setSelectedItem(teamName);
            }
        } catch (SQLException throwables) {
            throwables.printStackTrace();
        }
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "updateMatchPanel");
    }//GEN-LAST:event_updateMatchBtnActionPerformed

    private void updateMatchGoBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateMatchGoBackBtnActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "matchesPanel");
    }//GEN-LAST:event_updateMatchGoBackBtnActionPerformed

    private void updateMatchSubmitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateMatchSubmitBtnActionPerformed
        String team1Name = updateMatchTeam1.getSelectedItem().toString().toUpperCase();
        String team2Name = updateMatchTeam2.getSelectedItem().toString().toUpperCase();

        String team1ID = (String)teamNames.get(team1Name);
        String team2ID = (String)teamNames.get(team2Name);

        String day = updatePlayerDOBDay.getSelectedItem().toString().toUpperCase();
        String month = updatePlayerDOBMonth.getSelectedItem().toString().toUpperCase();
        String year = updatePlayerDOBYear.getSelectedItem().toString().toUpperCase();

        String date = String.join("-", day, month, year);

        String field = updateMatchFieldChoice.getSelectedItem().toString().toUpperCase();
        String newValue = updateMatchChange.getText();

        if(null != field)switch (field) {
            case "TEAM 1":
                field = "team_1";
                break;
            case "TEAM 2":
                field = "team_2";
                break;
            case "MATCH DATE":
                field = "coach";
                newValue = "'"+ newValue + "'";
                break;
            case "VENUE":
                newValue = "'"+ newValue.toUpperCase() + "'";
                break;
            case "TOSS WINNER":
                field = "toss_winner";
                newValue = (String)teamNames.get(newValue);
                break;
            case "TOSS DECISION":
                field = "toss_decision";
                newValue = "'"+ newValue.toUpperCase() + "'";
                break;
            case "INNINGS 1 SCORE":
                field = "innings_1_score";
                newValue = "'"+ newValue + "'";
                break;
            case "INNINGS 2 SCORE":
                field = "innings_2_score";
                newValue = "'"+ newValue + "'";
                break;
            case "WIN MARGIN":
                field = "win_margin";
                newValue = "'"+ newValue.toUpperCase() + "'";
                break;
            default:
                break;
        }
        String query = "UPDATE match SET " + field + "="+ newValue +" WHERE team_1=" + team1ID + " AND team_2=" + team2ID + " AND match_date='" + date + "'";
        Statement stmt;
        System.out.println(query);
        try {
            stmt = connection.createStatement();
            stmt.execute(query);
            viewMatchesBtnActionPerformed(evt);
        } catch (SQLException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateMatchSubmitBtnActionPerformed

    private void changeTossWinnerCombo(){
        addMatchTossWinner.setModel(new DefaultComboBoxModel());
        addMatchWinner.setModel(new DefaultComboBoxModel());
        String team1 = (String) addMatchTeam1.getSelectedItem();
        String team2 = (String) addMatchTeam2.getSelectedItem();
        addMatchTossWinner.addItem(team1);
        addMatchTossWinner.addItem(team2);
        addMatchWinner.addItem(team1);
        addMatchWinner.addItem(team2);
    }

    private void addMatchTeam1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMatchTeam1ActionPerformed
        changeTossWinnerCombo();
    }//GEN-LAST:event_addMatchTeam1ActionPerformed

    private void addMatchTeam2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMatchTeam2ActionPerformed
        changeTossWinnerCombo();
    }//GEN-LAST:event_addMatchTeam2ActionPerformed

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        userName = loginUserName.getText();
        password = loginPassword.getText();
        try {
            connection=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe",userName,password);
            CardLayout card = (CardLayout)mainPanel.getLayout();
            card.show(mainPanel, "homePanel");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage().split(":")[1]);
        }
    }//GEN-LAST:event_loginBtnActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        loginUserName.setText("");
        loginPassword.setText("");
    }//GEN-LAST:event_resetBtnActionPerformed

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        try {
            connection.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "loginPanel");
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void viewMatchesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewMatchesBtnActionPerformed
        DefaultTableModel defaultTableModel = new DefaultTableModel();
        matchesTable.setModel(defaultTableModel);
        
        defaultTableModel.addColumn("Team 1");
        defaultTableModel.addColumn("Team 2");
        defaultTableModel.addColumn("Match Date");
        defaultTableModel.addColumn("Venue");
        defaultTableModel.addColumn("Toss Winner");
        defaultTableModel.addColumn("Toss Decision");
        defaultTableModel.addColumn("Innings 1");
        defaultTableModel.addColumn("Innings 2");
        defaultTableModel.addColumn("Winner");
        defaultTableModel.addColumn("Win Margin");
        try {
            Statement statement = connection.createStatement();//crating statement object
            String query = "SELECT A.NAME,B.NAME,C.MATCH_DATE,C.VENUE,D.NAME AS TOSS_WINNER,C.TOSS_DECISION,C.INNINGS_1_SCORE,C.INNINGS_2_SCORE,E.NAME AS WINNER,C.WIN_MARGIN\n" +
                    "FROM MATCH C " +
                    "LEFT OUTER JOIN TEAM A " +
                    "ON A.TEAM_ID = C.TEAM_1 " +
                    "LEFT OUTER JOIN TEAM B " +
                    "ON B.TEAM_ID = C.TEAM_2 " +
                    "LEFT OUTER JOIN TEAM D " +
                    "ON D.TEAM_ID = C.TOSS_WINNER " +
                    "LEFT OUTER JOIN TEAM E " +
                    "ON E.TEAM_ID = C.WINNER";
            ResultSet resultSet = statement.executeQuery(query);//executing query and storing result in ResultSet

            while (resultSet.next()) {
                //Retrieving details from the database and storing it in the String variables
                String team1 = resultSet.getString(1);
                String team2 = resultSet.getString(2);
                String matchDate = resultSet.getString(3);
                String venue = resultSet.getString(4);
                String tossWinner = resultSet.getString(5);
                String tossDecision = resultSet.getString(6);
                String innings1Score = resultSet.getString(7);
                String innings2Score = resultSet.getString(8);
                String winner = resultSet.getString(9);
                String winMargin = resultSet.getString(10);
                defaultTableModel.addRow(new Object[]{team1, team2, matchDate, venue, tossWinner, tossDecision, innings1Score, innings2Score, winner, winMargin});
            }
        } catch (SQLException throwables) {
            throwables.printStackTrace();
        }
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "matchesPanel");
    }//GEN-LAST:event_viewMatchesBtnActionPerformed

    private void viewPlayersBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewPlayersBtnActionPerformed
        DefaultTableModel defaultTableModel = new DefaultTableModel();
        playersTable.setModel(defaultTableModel);
        defaultTableModel.addColumn("Name");
        defaultTableModel.addColumn("Team");
        defaultTableModel.addColumn("DOB");
        defaultTableModel.addColumn("Batting Hand");
        defaultTableModel.addColumn("Bowling Skill");
        defaultTableModel.addColumn("Country");
        defaultTableModel.addColumn("Jersey N.o");
        defaultTableModel.addColumn("Runs");
        defaultTableModel.addColumn("Wickets");

        try {
            Statement statement = connection.createStatement();//crating statement object
            String query = "SELECT A.FNAME,A.LNAME,B.NAME,A.DOB,A.BATTING_HAND,A.BOWLING_SKILL,A.COUNTRY,A.JERSEY_NO,A.RUNS,A.WICKETS " +
                    "FROM PLAYER A " +
                    "LEFT OUTER JOIN TEAM B " +
                    "ON A.TEAM_ID = B.TEAM_ID";
            ResultSet resultSet = statement.executeQuery(query);//executing query and storing result in ResultSet

            while (resultSet.next()) {
                //Retrieving details from the database and storing it in the String variables
                String name = resultSet.getString(1) + " " + resultSet.getString(2);
                String team = resultSet.getString(3);
                String dob = resultSet.getString(4);
                String battingHand = resultSet.getString(5);
                String bowlingSkill = resultSet.getString(6);
                String country = resultSet.getString(7);
                int jerseyNo = resultSet.getInt(8);
                int runs = resultSet.getInt(9);
                int wickets =resultSet.getInt(10);
                defaultTableModel.addRow(new Object[]{name, team, dob, battingHand, bowlingSkill, country, jerseyNo, runs, wickets});
            }
        } catch (SQLException throwables) {
            throwables.printStackTrace();
        }
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "playersPanel");
    }//GEN-LAST:event_viewPlayersBtnActionPerformed

    private void delTeamBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delTeamBtnActionPerformed
        String query = "SELECT team_id, name FROM team";
        Statement stmt;
        System.out.println(query);

        teamNames = new Hashtable();
        delTeamName.setModel(new DefaultComboBoxModel());
        try {
            stmt = connection.createStatement();
            ResultSet resultSet = stmt.executeQuery(query);//executing query and storing result in ResultSet

            while (resultSet.next()) {
                //Retrieving details from the database and storing it in the String variables
                String teamName = resultSet.getString(2);
                String teamID = resultSet.getString(1);
                teamNames.put(teamName, teamID);
                delTeamName.addItem(teamName);
            }
        } catch (SQLException throwables) {
            throwables.printStackTrace();
        }
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "delTeamPanel");
    }//GEN-LAST:event_delTeamBtnActionPerformed

    private void updateTeamBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateTeamBtnActionPerformed
        String query = "SELECT team_id, name FROM team";
        Statement stmt;
        System.out.println(query);

        teamNames = new Hashtable();
        updateTeamName.setModel(new DefaultComboBoxModel());
        try {
            stmt = connection.createStatement();
            ResultSet resultSet = stmt.executeQuery(query);//executing query and storing result in ResultSet

            while (resultSet.next()) {
                //Retrieving details from the database and storing it in the String variables
                String teamName = resultSet.getString(2);
                String teamID = resultSet.getString(1);
                teamNames.put(teamName, teamID);
                updateTeamName.addItem(teamName);
            }
        } catch (SQLException throwables) {
            throwables.printStackTrace();
        }
        query = "SELECT player_id, fname, lname FROM player";
        System.out.println(query);
        playerNames = new Hashtable();

        try {
            stmt = connection.createStatement();
            ResultSet resultSet = stmt.executeQuery(query);//executing query and storing result in ResultSet

            while (resultSet.next()) {
                String playerID= resultSet.getString(1);
                String fName = resultSet.getString(2);
                String lName = resultSet.getString(3);
                String playerName = String.join(" ", fName, lName);
                System.out.println(playerName);
                playerNames.put(playerName, playerID);
            }
        } catch (SQLException throwables) {
            throwables.printStackTrace();
        }
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "updateTeamPanel");
    }//GEN-LAST:event_updateTeamBtnActionPerformed

    private void delMatchTeam2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delMatchTeam2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_delMatchTeam2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Window().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addMatchBtn;
    private javax.swing.JLabel addMatchDateLabel;
    private javax.swing.JComboBox<String> addMatchDay;
    private javax.swing.JButton addMatchGoBackBtn;
    private javax.swing.JLabel addMatchHeadingLabel;
    private javax.swing.JLabel addMatchInnings1Label;
    private javax.swing.JTextField addMatchInnings1Score;
    private javax.swing.JLabel addMatchInnings2Label;
    private javax.swing.JTextField addMatchInnings2Score;
    private javax.swing.JComboBox<String> addMatchMonth;
    private javax.swing.JPanel addMatchPanel;
    private javax.swing.JButton addMatchSubmitBtn;
    private javax.swing.JComboBox<String> addMatchTeam1;
    private javax.swing.JLabel addMatchTeam1Label;
    private javax.swing.JComboBox<String> addMatchTeam2;
    private javax.swing.JLabel addMatchTeam2Label;
    private javax.swing.JComboBox<String> addMatchTossDecision;
    private javax.swing.JLabel addMatchTossDecisionLabel;
    private javax.swing.JComboBox<String> addMatchTossWinner;
    private javax.swing.JLabel addMatchTossWinnerLabel;
    private javax.swing.JTextField addMatchVenue;
    private javax.swing.JLabel addMatchVenueLabel;
    private javax.swing.JTextField addMatchWinMargin;
    private javax.swing.JLabel addMatchWinMarginLabel;
    private javax.swing.JComboBox<String> addMatchWinner;
    private javax.swing.JLabel addMatchWinnerLabel;
    private javax.swing.JComboBox<String> addMatchYear;
    private javax.swing.JComboBox<String> addPlayerBattingHand;
    private javax.swing.JLabel addPlayerBattingHandLabel;
    private javax.swing.JComboBox<String> addPlayerBowlingSkill;
    private javax.swing.JLabel addPlayerBowlingSkillLabel;
    private javax.swing.JTextField addPlayerCountry;
    private javax.swing.JLabel addPlayerCountryLabel;
    private javax.swing.JComboBox<String> addPlayerDOBDay;
    private javax.swing.JLabel addPlayerDOBLabel;
    private javax.swing.JComboBox<String> addPlayerDOBMonth;
    private javax.swing.JComboBox<String> addPlayerDOBYear;
    private javax.swing.JTextField addPlayerFirstName;
    private javax.swing.JLabel addPlayerFirstNameLabel;
    private javax.swing.JButton addPlayerGoBackBtn;
    private javax.swing.JLabel addPlayerHeadingLabel;
    private javax.swing.JLabel addPlayerJerseyLabel;
    private javax.swing.JTextField addPlayerJerseyNumber;
    private javax.swing.JTextField addPlayerLastName;
    private javax.swing.JLabel addPlayerLastNameLabel;
    private javax.swing.JPanel addPlayerPanel;
    private javax.swing.JTextField addPlayerRunsScored;
    private javax.swing.JLabel addPlayerRunsScoredLabel;
    private javax.swing.JButton addPlayerSubmitBtn;
    private javax.swing.JComboBox<String> addPlayerTeam;
    private javax.swing.JLabel addPlayerTeamLabel;
    private javax.swing.JTextField addPlayerWicketsTaken;
    private javax.swing.JLabel addPlayerWicketsTakenLabel;
    private javax.swing.JButton addPlayersBtn;
    private javax.swing.JButton addTeamBtn;
    private javax.swing.JTextField addTeamCoach;
    private javax.swing.JLabel addTeamCoachLabel;
    private javax.swing.JButton addTeamGoBackBtn;
    private javax.swing.JLabel addTeamHeadingLabel;
    private javax.swing.JTextField addTeamLoss;
    private javax.swing.JLabel addTeamLossLabel;
    private javax.swing.JTextField addTeamName;
    private javax.swing.JLabel addTeamNameLabel;
    private javax.swing.JPanel addTeamPanel;
    private javax.swing.JTextField addTeamPlayed;
    private javax.swing.JLabel addTeamPlayedLabel;
    private javax.swing.JTextField addTeamPoints;
    private javax.swing.JLabel addTeamPointsLabel;
    private javax.swing.JButton addTeamSubmitBtn;
    private javax.swing.JTextField addTeamTied;
    private javax.swing.JLabel addTeamTiedLabel;
    private javax.swing.JTextField addTeamWins;
    private javax.swing.JLabel addTeamWinsLabel;
    private javax.swing.JButton delMatchBtn;
    private javax.swing.JLabel delMatchDateLabel;
    private javax.swing.JComboBox<String> delMatchDay;
    private javax.swing.JButton delMatchGoBackButton;
    private javax.swing.JLabel delMatchHeading;
    private javax.swing.JComboBox<String> delMatchMonth;
    private javax.swing.JPanel delMatchPanel;
    private javax.swing.JButton delMatchSubmitBtn;
    private javax.swing.JComboBox<String> delMatchTeam1;
    private javax.swing.JLabel delMatchTeam1Label;
    private javax.swing.JComboBox<String> delMatchTeam2;
    private javax.swing.JLabel delMatchTeam2Label;
    private javax.swing.JComboBox<String> delMatchYear;
    private javax.swing.JComboBox<String> delPlayerDOBDay;
    private javax.swing.JLabel delPlayerDOBLabel;
    private javax.swing.JComboBox<String> delPlayerDOBMonth;
    private javax.swing.JComboBox<String> delPlayerDOBYear;
    private javax.swing.JButton delPlayerGoBackBtn;
    private javax.swing.JLabel delPlayerHeadingLabel;
    private javax.swing.JComboBox<String> delPlayerName;
    private javax.swing.JLabel delPlayerNameLabel;
    private javax.swing.JPanel delPlayerPanel;
    private javax.swing.JButton delPlayerSubmitBtn;
    private javax.swing.JButton delPlayersBtn;
    private javax.swing.JButton delTeamBtn;
    private javax.swing.JButton delTeamGoBackBtn;
    private javax.swing.JLabel delTeamHeadingLabel;
    private javax.swing.JComboBox<String> delTeamName;
    private javax.swing.JPanel delTeamPanel;
    private javax.swing.JButton delTeamSubmitBtn;
    private javax.swing.JLabel delTeamTeamNameLabel;
    private javax.swing.JPanel homePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton loginBtn;
    private javax.swing.JLabel loginHeading;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JTextField loginPassword;
    private javax.swing.JLabel loginPasswordLabel;
    private javax.swing.JTextField loginUserName;
    private javax.swing.JLabel loginUserNameLabel;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton matchesGoBackBtn;
    private javax.swing.JLabel matchesHeadingLabel;
    private javax.swing.JPanel matchesPanel;
    private javax.swing.JScrollPane matchesScrollPane;
    private javax.swing.JTable matchesTable;
    private javax.swing.JButton playersGoBackBtn;
    private javax.swing.JLabel playersHeadingLabel;
    private javax.swing.JPanel playersPanel;
    private javax.swing.JScrollPane playersScrollPane;
    private javax.swing.JTable playersTable;
    private javax.swing.JButton pointsGoBackBtn;
    private javax.swing.JLabel pointsHeadingLabel;
    private javax.swing.JPanel pointsPanel;
    private javax.swing.JScrollPane pointsScrollPane;
    private javax.swing.JTable pointsTable;
    private javax.swing.JToggleButton resetBtn;
    private javax.swing.JButton updateMatchBtn;
    private javax.swing.JTextField updateMatchChange;
    private javax.swing.JLabel updateMatchChangeLabel;
    private javax.swing.JComboBox<String> updateMatchDay;
    private javax.swing.JComboBox<String> updateMatchFieldChoice;
    private javax.swing.JLabel updateMatchFieldChoiceLabel;
    private javax.swing.JButton updateMatchGoBackBtn;
    private javax.swing.JLabel updateMatchHeadingLabel;
    private javax.swing.JComboBox<String> updateMatchMonth;
    private javax.swing.JPanel updateMatchPanel;
    private javax.swing.JButton updateMatchSubmitBtn;
    private javax.swing.JComboBox<String> updateMatchTeam1;
    private javax.swing.JLabel updateMatchTeam1Label;
    private javax.swing.JComboBox<String> updateMatchTeam2;
    private javax.swing.JLabel updateMatchTeam2Label;
    private javax.swing.JComboBox<String> updateMatchYear;
    private javax.swing.JLabel updateMatcheDateLabel;
    private javax.swing.JTextField updatePlayerChange;
    private javax.swing.JLabel updatePlayerChangeLabel;
    private javax.swing.JComboBox<String> updatePlayerDOBDay;
    private javax.swing.JLabel updatePlayerDOBLabel;
    private javax.swing.JComboBox<String> updatePlayerDOBMonth;
    private javax.swing.JComboBox<String> updatePlayerDOBYear;
    private javax.swing.JComboBox<String> updatePlayerFieldChoice;
    private javax.swing.JLabel updatePlayerFieldChoiceLabel;
    private javax.swing.JButton updatePlayerGoBackBtn;
    private javax.swing.JLabel updatePlayerHeadingLabel;
    private javax.swing.JComboBox<String> updatePlayerName;
    private javax.swing.JLabel updatePlayerNameLabel;
    private javax.swing.JPanel updatePlayerPanel;
    private javax.swing.JButton updatePlayerSubmitBtn;
    private javax.swing.JButton updatePlayersBtn;
    private javax.swing.JButton updateTeamBtn;
    private javax.swing.JTextField updateTeamChange;
    private javax.swing.JLabel updateTeamChangeLabel;
    private javax.swing.JComboBox<String> updateTeamFieldChoice;
    private javax.swing.JLabel updateTeamFieldChoiceLabel;
    private javax.swing.JButton updateTeamGoBackBtn;
    private javax.swing.JLabel updateTeamHeadingLabel;
    private javax.swing.JComboBox<String> updateTeamName;
    private javax.swing.JLabel updateTeamNameLabel;
    private javax.swing.JPanel updateTeamPanel;
    private javax.swing.JButton updateTeamSubmitBtn;
    private javax.swing.JButton viewMatchesBtn;
    private javax.swing.JButton viewPlayersBtn;
    private javax.swing.JButton viewPointsBtn;
    private javax.swing.JLabel welcomeLabel;
    // End of variables declaration//GEN-END:variables
}
